facet_grid(~covariate)+
geom_line(aes(x = Value, y = .estimate, col=Model), lwd=1.25) + # Add estimated smooth
geom_point(data = data_full_long%>%filter(Model=="Model 1")%>%rename(covariate=covariatename), aes(x = Value, y = Y_rec), color = "black") + # Add your data points
# couldnt figure out how to do this in one call, so instead its two your will
#have to change the model filter!! and potentially the x and y values
geom_text(
data    = results_gam%>%filter(Model=="Model 1"),
mapping = aes(x = -2, y = 5, label = round(DevianceExp,2), group=covariate,col=Model),
hjust   = -0.1,
vjust   = -1
)+
geom_text(
data    = results_gam%>%filter(Model=="Model 2"),
mapping = aes(x = -2, y = 4, label = round(DevianceExp,2), group=covariate,col=Model),
hjust   = -0.1,
vjust   = -1
)+
annotate("text", x= -2, y = 7,label="Dev Explained")+
theme_bw()
partial_effects
partial_effects<-ggplot(smooths_gam) +  # Setup the plot with the fitted values
facet_grid(~covariate)+
geom_line(aes(x = Value, y = .estimate, col=Model), lwd=1.25) + # Add estimated smooth
geom_point(data = data_full_long%>%filter(Model=="Model 1")%>%rename(covariate=covariatename), aes(x = Value, y = Y_rec), color = "black") + # Add your data points
# couldnt figure out how to do this in one call, so instead its two your will
#have to change the model filter!! and potentially the x and y values
geom_text(
data    = results_gam%>%filter(Model=="Model 1"),
mapping = aes(x = -2, y = 5, label = round(DevianceExp,2), group=covariate,col=Model),
hjust   = -0.1,
vjust   = -1
)+
geom_text(
data    = results_gam%>%filter(Model=="Model 2"),
mapping = aes(x = -2, y = 4, label = round(DevianceExp,2), group=covariate,col=Model),
hjust   = -0.1,
vjust   = -1
)+
annotate("text", x= -1, y = 7.5,label="Dev Explained")+
theme_bw()
partial_effects
partial_effects<-ggplot(smooths_gam) +  # Setup the plot with the fitted values
facet_grid(~covariate)+
geom_line(aes(x = Value, y = .estimate, col=Model), lwd=1.25) + # Add estimated smooth
geom_point(data = data_full_long%>%filter(Model=="Model 1")%>%rename(covariate=covariatename), aes(x = Value, y = Y_rec), color = "black") + # Add your data points
# couldnt figure out how to do this in one call, so instead its two your will
#have to change the model filter!! and potentially the x and y values
geom_text(
data    = results_gam%>%filter(Model=="Model 1"),
mapping = aes(x = -2, y = 5, label = round(DevianceExp,2), group=covariate,col=Model),
hjust   = -0.1,
vjust   = -1
)+
geom_text(
data    = results_gam%>%filter(Model=="Model 2"),
mapping = aes(x = -2, y = 4, label = round(DevianceExp,2), group=covariate,col=Model),
hjust   = -0.1,
vjust   = -1
)+
annotate("text", x= -1, y = 7.5,label="Dev Explained")+
guides(text="none")
theme_bw()
partial_effects
theme_bw()+
partial_effects
partial_effects<-ggplot(smooths_gam) +  # Setup the plot with the fitted values
facet_grid(~covariate)+
geom_line(aes(x = Value, y = .estimate, col=Model), lwd=1.25) + # Add estimated smooth
geom_point(data = data_full_long%>%filter(Model=="Model 1")%>%rename(covariate=covariatename), aes(x = Value, y = Y_rec), color = "black") + # Add your data points
# couldnt figure out how to do this in one call, so instead its two your will
#have to change the model filter!! and potentially the x and y values
geom_text(
data    = results_gam%>%filter(Model=="Model 1"),
mapping = aes(x = -2, y = 5, label = round(DevianceExp,2), group=covariate,col=Model),
hjust   = -0.1,
vjust   = -1
)+
geom_text(
data    = results_gam%>%filter(Model=="Model 2"),
mapping = aes(x = -2, y = 4, label = round(DevianceExp,2), group=covariate,col=Model),
hjust   = -0.1,
vjust   = -1
)+
annotate("text", x= -1, y = 7.5,label="Dev Explained")+
guides(text="none")+
theme_bw()
partial_effects
partial_effects<-ggplot(smooths_gam) +  # Setup the plot with the fitted values
facet_grid(~covariate)+
geom_line(aes(x = Value, y = .estimate, col=Model), lwd=1.25) + # Add estimated smooth
geom_point(data = data_full_long%>%filter(Model=="Model 1")%>%rename(covariate=covariatename), aes(x = Value, y = Y_rec), color = "black") + # Add your data points
# couldnt figure out how to do this in one call, so instead its two your will
#have to change the model filter!! and potentially the x and y values
geom_text(
data    = results_gam%>%filter(Model=="Model 1"),
mapping = aes(x = -2, y = 5, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1
)+
geom_text(
data    = results_gam%>%filter(Model=="Model 2"),
mapping = aes(x = -2, y = 4, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1
)+
annotate("text", x= -1, y = 7.5,label="Dev Explained")+
guides(text="none")+
theme_bw()
partial_effects
partial_effects<-ggplot(smooths_gam) +  # Setup the plot with the fitted values
facet_grid(~covariate)+
geom_line(aes(x = Value, y = .estimate, col=Model), lwd=1.25) + # Add estimated smooth
geom_point(data = data_full_long%>%filter(Model=="Model 1")%>%rename(covariate=covariatename), aes(x = Value, y = Y_rec), color = "black") + # Add your data points
# couldnt figure out how to do this in one call, so instead its two your will
#have to change the model filter!! and potentially the x and y values
geom_text(
data    = results_gam%>%filter(Model=="Model 1"),
mapping = aes(x = -2, y = 5, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1, col=#F8766D,
)+
geom_text(
data    = results_gam%>%filter(Model=="Model 2"),
mapping = aes(x = -2, y = 4, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1
)+
annotate("text", x= -1, y = 7.5,label="Dev Explained")+
guides(text="none")+
theme_bw()
partial_effects<-ggplot(smooths_gam) +  # Setup the plot with the fitted values
facet_grid(~covariate)+
geom_line(aes(x = Value, y = .estimate, col=Model), lwd=1.25) + # Add estimated smooth
geom_point(data = data_full_long%>%filter(Model=="Model 1")%>%rename(covariate=covariatename), aes(x = Value, y = Y_rec), color = "black") + # Add your data points
# couldnt figure out how to do this in one call, so instead its two your will
#have to change the model filter!! and potentially the x and y values
geom_text(
data    = results_gam%>%filter(Model=="Model 1"),
mapping = aes(x = -2, y = 5, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1, col='#F8766D'
)+
geom_text(
data    = results_gam%>%filter(Model=="Model 2"),
mapping = aes(x = -2, y = 4, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1
)+
annotate("text", x= -1, y = 7.5,label="Dev Explained")+
guides(text="none")+
theme_bw()
partial_effects
partial_effects<-ggplot(smooths_gam) +  # Setup the plot with the fitted values
facet_grid(~covariate)+
geom_line(aes(x = Value, y = .estimate, col=Model), lwd=1.25) + # Add estimated smooth
geom_point(data = data_full_long%>%filter(Model=="Model 1")%>%rename(covariate=covariatename), aes(x = Value, y = Y_rec), color = "black") + # Add your data points
# couldnt figure out how to do this in one call, so instead its two your will
#have to change the model filter!! and potentially the x and y values
geom_text(
data    = results_gam%>%filter(Model=="Model 1"),
mapping = aes(x = -2, y = 5, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1, col='#F8766D'
)+
geom_text(
data    = results_gam%>%filter(Model=="Model 2"),
mapping = aes(x = -2, y = 4, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1, col='#00BFC4'
)+
annotate("text", x= -1, y = 7.5,label="Dev Explained")+
guides(text="none")+
theme_bw()
partial_effects
partial_effects<-ggplot(smooths_gam) +  # Setup the plot with the fitted values
facet_grid(~covariate)+
geom_line(aes(x = Value, y = .estimate, col=Model), lwd=1.25) + # Add estimated smooth
geom_point(data = data_full_long%>%rename(covariate=covariatename), aes(x = Value, y = Y_rec), color = Model) + # Add your data points
# Diandre', I couldnt figure out how to do this in one call sot there are
# multiple geom text calls, which means you will
# have to change the model filter!! and potentially the x and y values
geom_text(
data    = results_gam%>%filter(Model=="Model 1"),
mapping = aes(x = -2, y = 5, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1, col='#F8766D'
)+
geom_text(
data    = results_gam%>%filter(Model=="Model 2"),
mapping = aes(x = -2, y = 4, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1, col='#00BFC4'
)+
annotate("text", x= -1, y = 7.5,label="Dev Explained")+
guides(text="none")+
theme_bw()
partial_effects<-ggplot(smooths_gam) +  # Setup the plot with the fitted values
facet_grid(~covariate)+
geom_line(aes(x = Value, y = .estimate, col=Model), lwd=1.25) + # Add estimated smooth
geom_point(data = data_full_long%>%rename(covariate=covariatename), aes(x = Value, y = Y_rec, col=Model)) + # Add your data points
# Diandre', I couldnt figure out how to do this in one call sot there are
# multiple geom text calls, which means you will
# have to change the model filter!! and potentially the x and y values
geom_text(
data    = results_gam%>%filter(Model=="Model 1"),
mapping = aes(x = -2, y = 5, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1, col='#F8766D'
)+
geom_text(
data    = results_gam%>%filter(Model=="Model 2"),
mapping = aes(x = -2, y = 4, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1, col='#00BFC4'
)+
annotate("text", x= -1, y = 7.5,label="Dev Explained")+
guides(text="none")+
theme_bw()
partial_effects
partial_effects<-ggplot(smooths_gam) +  # Setup the plot with the fitted values
facet_grid(~covariate)+
geom_line(aes(x = Value, y = .estimate, col=Model), lwd=1.25) + # Add estimated smooth
geom_point(data = data_full_long%>%rename(covariate=covariatename), aes(x = Value, y = Y_rec, col=Model),alpha = 0.2) + # Add your data points
# Diandre', I couldnt figure out how to do this in one call sot there are
# multiple geom text calls, which means you will
# have to change the model filter!! and potentially the x and y values
geom_text(
data    = results_gam%>%filter(Model=="Model 1"),
mapping = aes(x = -2, y = 5, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1, col='#F8766D'
)+
geom_text(
data    = results_gam%>%filter(Model=="Model 2"),
mapping = aes(x = -2, y = 4, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1, col='#00BFC4'
)+
annotate("text", x= -1, y = 7.5,label="Dev Explained")+
guides(text="none")+
theme_bw()
partial_effects
Modelnames <- unique(data_full_long$Model)
covariatenames <- unique(data_full_long$covariatename)
Modelnames <- unique(data_full_long$Model)
covariatenames <- unique(data_full_long$covariatename)
for(i in 1:length(covariatenames)){
for(j in 1:length(Modelnames)){
gamoutput(Modelnames[j], covariatenames[j], data_full_long)
}
}
for(i in 1:length(covariatenames)){
for(j in 1:length(Modelnames)){
gamoutput(Modelnames[j], covariatenames[j], data_full_long)
print(j)
}
print(i)
}
Modelnames <- unique(data_full_long$Model)
covariatenames <- unique(data_full_long$covariatename)
predictions_gam2<- data.frame()
results_gam2<- data.frame()
smooths_gam2<- data.frame()
for(i in 1:length(covariatenames)){
for(j in 1:length(Modelnames)){
gamout<-gamoutput(Modelnames[j], covariatenames[j], data_full_long)
predictions_gam2 <-rbind(gamout, predictions_gam2)
}
print(i)
}
Modelnames <- unique(data_full_long$Model)
covariatenames <- unique(data_full_long$covariatename)
predictions_gam2<- data.frame()
results_gam2<- data.frame()
smooths_gam2<- data.frame()
for(i in 1:length(covariatenames)){
for(j in 1:length(Modelnames)){
gamout<-gamoutput(Modelnames[j], covariatenames[j], data_full_long)
predictions_gam2 <-rbind(gamout, predictions_gam2)
}
print(i)
}
for(i in 1:length(covariatenames)){
for(j in 1:length(Modelnames)){
gamout<-gamoutput(Modelnames[j], covariatenames[j], data_full_long)
}
print(i)
}
gamout
for(i in 1:length(covariatenames)){
for(j in 1:length(Modelnames)){
gamout<-gamoutput(Modelnames[j], covariatenames[j], data_full_long)
predictions_gam2<-rbind(predictions_gam2, gamout[[2]])
}
print(i)
}
predictions_gam2
Modelnames <- unique(data_full_long$Model)
covariatenames <- unique(data_full_long$covariatename)
predictions_gam2<- data.frame()
results_gam2<- data.frame()
smooths_gam2<- data.frame()
for(i in 1:length(covariatenames)){
for(j in 1:length(Modelnames)){
gamout<-gamoutput(Modelnames[j], covariatenames[j], data_full_long)
predictions_gam2<-rbind(predictions_gam2, gamout[[2]])
results_gam2<-rbind(results_gam2, gamout[[3]])
smooths_gam2<-rbind(smooths_gam2, gamout[[4]])
}
print(i)
}
library(tidyverse)
library(ggplot2)
library(readr)
library(data.table)
library(lubridate)
library(corrplot)
library(mgcv)
library(dplyr)
library(tidync)
library(gratia)
set.seed(99)
year<- rep(seq(1980, 2009),2) # a variable for year
modelnames<- rep(c("Model 1", "Model 2"), each=30) # a variable for models,
#equivalent to ROMS/GLORYs
cov1mod1<- arima.sim(list(order = c(1,0,0), ar = 0.7), n = 30)%>% #random time series
scale() # standardize it!
cov1mod2 <- cov1mod1+rnorm(n= 30, mean = 1, sd=0.3)%>%
scale()#second time series that
#covaries with the first
set.seed(150)
cov2mod1<- arima.sim(list(order = c(1,0,0), ar = 0.5), n = 30)%>% #random time series
scale() # standardize it!
cov2mod2 <- cov2mod1+rnorm(n= 30, mean =1, sd=1)%>%
scale()
#second time series that
#covaries with the first
dataset <- data.frame(year=year,covariate1=c(cov1mod1,cov1mod2),covariate2=c(cov2mod1,cov2mod2), Model=modelnames) #combine!
#quick check just to see if these look roughly like your ocean data
ggplot(data=dataset, aes(x=year, y=covariate1, group=Model, col=Model))+
geom_line()+
theme_bw()
ggplot(data=dataset, aes(x=year, y=covariate2, group=Model, col=Model))+
geom_line()+
theme_bw()
#this tells us the covariance
cov1<- cov(dataset%>%filter(Model=="Model 1")%>%select(covariate1),
dataset%>%filter(Model=="Model 2")%>%select(covariate1))
cov2<-cov(dataset%>%filter(Model=="Model 1")%>%select(covariate2),
dataset%>%filter(Model=="Model 2")%>%select(covariate2))
#this tells us the correlation coefficient
cor1<- cor(dataset%>%filter(Model=="Model 1")%>%select(covariate1),
dataset%>%filter(Model=="Model 2")%>%select(covariate1))
cor2 <-cor(dataset%>%filter(Model=="Model 1")%>%select(covariate2),
dataset%>%filter(Model=="Model 2")%>%select(covariate2))
#lets store these in a dataframe so we have them
data.frame(covariate=c("covariate 1", "covarate 2"),
covariance = c(cov1, cov2), correlation = c(cor1, cor2))
linear1 <- 4
linear2 <- 0.6
quad2<- 5
intercept <- 1
error<- rnorm(30, 0.1,0.5)
#this is just a simple qudratic equation with 2 covraiates plus random error
Y_rec <- linear1*cov1mod1-linear2*cov2mod1-quad2*cov2mod1^2+error+intercept
data_full<-dataset%>%
mutate(Y_rec=rep(Y_rec, 2))
ggplot(data=data_full, aes(x=covariate1, y=Y_rec, group=Model, col=Model))+
geom_point()+
geom_smooth(method='lm')+
theme_bw()
ggplot(data=data_full, aes(x=covariate2, y=Y_rec, group=Model, col=Model))+
geom_point()+
geom_smooth(method='lm')+
theme_bw()
ggplot(data=data_full, aes(x=covariate2, y=Y_rec, group=Model, col=Model))+
geom_point()+
geom_smooth(method = "gam", formula = y ~ s(x, k = 3))+
theme_bw()
data_full_long <- pivot_longer(data_full, -c(Y_rec, Model, year), names_to = "covariatename", values_to = "Value")
gamoutput<-function(modelname, covariate){
gamfit<- gam(Y_rec~s(Value,k=3), data=data_full_long%>%filter(Model == modelname, covariatename==covariate), method = "REML")
summary <- summary(gamfit)
predictions <- data.frame(prediction=predict(gamfit, se.fit=TRUE),year=unique(data_full$year))%>%
mutate(covariate=covariate, Model = modelname)
#pulling out the values we need and adding to a dataframe
results <- data.frame(covariate=covariate, Model = modelname, pvalue = summary$s.table[, "p-value"], DevianceExp = summary$dev.expl, rsq = summary$dev.expl)
smooth_data <- smooth_estimates(gamfit)%>%  # Or specify the smooth term you want to plot
add_constant(model_constant(gamfit)) %>% # Add the intercept
add_confint()%>% # Add the credible interval
# pivot_longer(c(covariate),names_to = "Smooth",values_to ="Value")%>%
select(-c(.by))%>%
mutate(covariate=covariate, Model = modelname)
output<-list(summary, predictions, results,smooth_data)
return(output)
}
gamM1C1<-gamoutput("Model 1", "covariate1")
gamM2C1<-gamoutput("Model 2", "covariate1")
gamM1C2<-gamoutput("Model 1", "covariate2")
gamM2C2<-gamoutput("Model 2", "covariate2")
predictions_gam<- data.frame(gamM1C1[[2]])%>%
bind_rows(data.frame(gamM2C1[[2]]))%>%
bind_rows(data.frame(gamM1C2[[2]]))%>%
bind_rows(data.frame(gamM2C2[[2]]))
results_gam<- data.frame(gamM1C1[[3]])%>%
bind_rows(data.frame(gamM2C1[[3]]))%>%
bind_rows(data.frame(gamM1C2[[3]]))%>%
bind_rows(data.frame(gamM2C2[[3]]))
smooths_gam<- data.frame(gamM1C1[[4]])%>%
bind_rows(data.frame(gamM2C1[[4]]))%>%
bind_rows(data.frame(gamM1C2[[4]]))%>%
bind_rows(data.frame(gamM2C2[[4]]))
results_gam
smooth_full<- smooths_gam%>%left_join(data_full_long)
partial_effects<-ggplot(smooths_gam) +  # Setup the plot with the fitted values
facet_grid(~covariate)+
geom_line(aes(x = Value, y = .estimate, col=Model), lwd=1.25) + # Add estimated smooth
geom_point(data = data_full_long%>%filter(Model=="Model 1")%>%rename(covariate=covariatename), aes(x = Value, y = Y_rec), color = "black") + # Add your data points
theme_bw()
partial_effects
data_full_long <- pivot_longer(data_full, -c(Y_rec, Model, year), names_to = "covariatename", values_to = "Value") #modify this for your long dataset with the re devs
#the function starts here
gamoutput<-function(modelname, covariate, data){
#this is the equation of the gam that filters the for a model (GLORYs or MOM6)
# and filters for a covariate (MLDpjuv, Tcop etc. etc.)
gamfit<- gam(Y_rec~s(Value,k=3), data=data%>%filter(Model == modelname, covariatename==covariate), method = "REML")
summary <- summary(gamfit) #this pulls out the summary of the model
#this pulls out the model preditions and the SEs of the predictions and stores
#them into a dataframe
predictions <- data.frame(prediction=predict(gamfit, se.fit=TRUE),year=unique(data_full$year))%>%
mutate(covariate=covariate, Model = modelname)
#pulling out the values we need from the summary and adding to a dataframe
#that we can easily make a table out of
results <- data.frame(covariate=covariate, Model = modelname, pvalue = summary$s.table[, "p-value"], DevianceExp = summary$dev.expl, rsq = summary$dev.expl)
#pulling out the shape of the relationship so that we can plot it!
smooth_data <- smooth_estimates(gamfit)%>%  # Or specify the smooth term you want to plot
add_constant(model_constant(gamfit)) %>% # Add the intercept
add_confint()%>% # Add the credible interval
# pivot_longer(c(covariate),names_to = "Smooth",values_to ="Value")%>%
select(-c(.by))%>%
mutate(covariate=covariate, Model = modelname)
#putting it together as a list so we can get a single output with all the great
#info that we need!
output<-list(summary, predictions, results,smooth_data)
return(output)
}
#this runs the function for both ROMS and GLORYs for each covariate, you will
#want to change the values to match your data. Output list will be stored
# as a variable.
gamM1C1<-gamoutput("Model 1", "covariate1", data_full_long)
gamM2C1<-gamoutput("Model 2", "covariate1", data_full_long)
gamM1C2<-gamoutput("Model 1", "covariate2", data_full_long)
gamM2C2<-gamoutput("Model 2", "covariate2", data_full_long)
unique(data_full_long$Model)
#now we can pull out each output we want from the list and combine it with the
# other runs of the function into a single dataframe
predictions_gam<- data.frame(gamM1C1[[2]])%>%
bind_rows(data.frame(gamM2C1[[2]]))%>%
bind_rows(data.frame(gamM1C2[[2]]))%>%
bind_rows(data.frame(gamM2C2[[2]]))
results_gam<- data.frame(gamM1C1[[3]])%>%
bind_rows(data.frame(gamM2C1[[3]]))%>%
bind_rows(data.frame(gamM1C2[[3]]))%>%
bind_rows(data.frame(gamM2C2[[3]]))
smooths_gam<- data.frame(gamM1C1[[4]])%>%
bind_rows(data.frame(gamM2C1[[4]]))%>%
bind_rows(data.frame(gamM1C2[[4]]))%>%
bind_rows(data.frame(gamM2C2[[4]]))
#change the code here to have your dataset long name, and you will create a
#multi panel plot showing the relationships of both models on the plot! We can
#also add the deviance explained to the plot as well :)
smooth_full<- smooths_gam%>%left_join(data_full_long)%>%left_join(results_gam)
partial_effects<-ggplot(smooths_gam) +  # Setup the plot with the fitted values
facet_grid(~covariate)+
geom_line(aes(x = Value, y = .estimate, col=Model), lwd=1.25) + # Add estimated smooth
geom_point(data = data_full_long%>%rename(covariate=covariatename), aes(x = Value, y = Y_rec, col=Model),alpha = 0.2) + # Add your data points
# Diandre', I couldnt figure out how to do this in one call sot there are
# multiple geom text calls, which means you will
# have to change the model filter!! and potentially the x and y values
geom_text(
data    = results_gam%>%filter(Model=="Model 1"),
mapping = aes(x = -2, y = 5, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1, col='#F8766D'
)+
geom_text(
data    = results_gam%>%filter(Model=="Model 2"),
mapping = aes(x = -2, y = 3, label = round(DevianceExp,2), group=covariate),
hjust   = -0.1,
vjust   = -1, col='#00BFC4'
)+
annotate("text", x= -1, y = 8,label="Dev Explained")+
guides(text="none")+
theme_bw()
partial_effects
#here is a more efficient way to run the function through a loop to
# generate the same output from the copy paste above!
#this creates the same objects that you can run through the plot code
Modelnames <- unique(data_full_long$Model) #change this to your dataset
covariatenames <- unique(data_full_long$covariatename) #change this to your dataset
predictions_gam2<- data.frame()
results_gam2<- data.frame()
smooths_gam2<- data.frame()
for(i in 1:length(covariatenames)){
for(j in 1:length(Modelnames)){
gamout<-gamoutput(Modelnames[j], covariatenames[j], data_full_long)
predictions_gam2<-rbind(predictions_gam2, gamout[[2]])
results_gam2<-rbind(results_gam2, gamout[[3]])
smooths_gam2<-rbind(smooths_gam2, gamout[[4]])
}
print(i)
}
